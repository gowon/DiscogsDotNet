openapi: 3.1.0
info:
  title: Discogs
  version: 2.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    oauth1Auth:
      type: http
      scheme: oauth1
security:
  - oauth1Auth: []
tags:
  - name: Authentication
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:authentication](https://www.discogs.com/developers/#page:authentication)
      for full documentation.
  - name: Database
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:database](https://www.discogs.com/developers/#page:database)
      for full documentation.
  - name: Marketplace
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:marketplace](https://www.discogs.com/developers/#page:marketplace)
      for full documentation.
  - name: Inventory Export
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:inventory-export](https://www.discogs.com/developers/#page:inventory-export)
      for full documentation.
  - name: Inventory Upload
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:inventory-upload](https://www.discogs.com/developers/#page:inventory-upload)
      for full documentation.
  - name: User identity
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:user-identity](https://www.discogs.com/developers/#page:user-identity)
      for full documentation.
  - name: User Collection
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:user-collection](https://www.discogs.com/developers/#page:user-collection)
      for full documentation.
  - name: User Wantlist
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:user-wantlist](https://www.discogs.com/developers/#page:user-wantlist)
      for full documentation.
  - name: User Lists
    description: >-
      Visit
      [https://www.discogs.com/developers/#page:user-lists](https://www.discogs.com/developers/#page:user-lists)
      for full documentation.
paths:
  /oauth/request_token:
    get:
      tags:
        - Authentication
      summary: Request Token
      description: >-
        Generate the request token.


        [https://www.discogs.com/developers/#page:authentication,header:authentication-request-token-url](https://www.discogs.com/developers/#page:authentication,header:authentication-request-token-url)
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            OAuth
            oauth_consumer_key="{{consumer_key}}",oauth_signature_method="PLAINTEXT",oauth_timestamp="{{$timestamp}}",oauth_nonce="{{$guid}}",oauth_version="1.0",oauth_signature="{{consumer_secret}}&",
            oauth_callback="your_callback"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /oauth/access_token:
    post:
      tags:
        - Authentication
      summary: Access Token
      description: >-
        Generate the access token.


        [https://www.discogs.com/developers/#page:authentication,header:authentication-access-token-url](https://www.discogs.com/developers/#page:authentication,header:authentication-access-token-url)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            OAuth oauth_consumer_key="{{consumer_key}}",
            oauth_nonce="{{$guid}}", oauth_token="{{oauth_token}}",
            oauth_signature="{{consumer_secret}}&{{oauth_token_secret}}",
            oauth_signature_method="PLAINTEXT",
            oauth_timestamp="{{$timestamp}}",
            oauth_verifier="{{oauth_verifier}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /releases/{release_id}:
    get:
      tags:
        - Database
      summary: Releases
      description: >-
        The Release resource represents a particular physical or digital object
        released by one or more Artists.


        [https://www.discogs.com/developers/#page:database,header:database-release](https://www.discogs.com/developers/#page:database,header:database-release)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: curr_abbr
          in: query
          schema:
            type: string
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /releases/{release_id}/rating/{username}:
    get:
      tags:
        - Database
      summary: Release rating by user
      description: >-
        Retrieves the release's rating for a given user.


        [https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user](https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Database
      summary: Release rating by user
      description: >-
        Updates the release's rating for a given user. Authentication as the
        user is required. 


        The "rating" parameter must be sent inside a JSON object inside the
        request body.


        [https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user](https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Database
      summary: Release rating by user
      description: >-
        Deletes the release's rating for a given user. Authentication as the
        user is required.


        [https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user](https://www.discogs.com/developers/#page:database,header:database-release-rating-by-user)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /releases/{release_id}/rating:
    get:
      tags:
        - Database
      summary: Community release rating
      description: >-
        The Community Release Rating endpoint retrieves the average rating and
        the total number of user ratings for a given release.


        [https://www.discogs.com/developers/#page:database,header:database-community-release-rating](https://www.discogs.com/developers/#page:database,header:database-community-release-rating)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /masters/{master_id}:
    get:
      tags:
        - Database
      summary: Master release
      description: >-
        The Master resource represents a set of similar Releases. Masters (also
        known as “master releases”) have a “main release” which is often the
        chronologically earliest.


        [https://www.discogs.com/developers/#page:database,header:database-master-release](https://www.discogs.com/developers/#page:database,header:database-master-release)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: master_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /masters/{master_id}/versions:
    get:
      tags:
        - Database
      summary: Master release versions
      description: >-
        Retrieves a list of all Releases that are versions of this master.
        Accepts Pagination parameters.


        [https://www.discogs.com/developers/#page:database,header:database-master-release-versions](https://www.discogs.com/developers/#page:database,header:database-master-release-versions)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: page
          in: query
          schema:
            type: string
          example: '{page}'
        - name: per_page
          in: query
          schema:
            type: string
          example: '{per_page}'
        - name: master_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /artists/{artist_id}:
    get:
      tags:
        - Database
      summary: Artist
      description: >-
        Get an artist


        [https://www.discogs.com/developers/#page:database,header:database-artist](https://www.discogs.com/developers/#page:database,header:database-artist)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: artist_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /artists/21262/releases:
    get:
      tags:
        - Database
      summary: Artist releases
      description: >-
        Returns a list of Releases and Masters associated with the Artist.
        Accepts Pagination.


        [https://www.discogs.com/developers/#page:database,header:database-artist-releases](https://www.discogs.com/developers/#page:database,header:database-artist-releases)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: sort
          in: query
          schema:
            type: string
          example: '{sort}'
        - name: sort_order
          in: query
          schema:
            type: string
          example: '{sort_order}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /labels/{label_id}:
    get:
      tags:
        - Database
      summary: Label
      description: >-
        Get a label


        [https://www.discogs.com/developers/#page:database,header:database-label](https://www.discogs.com/developers/#page:database,header:database-label)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: label_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /labels/{label_id}/releases:
    get:
      tags:
        - Database
      summary: All label releases
      description: >-
        Returns a list of Releases associated with the label. Accepts Pagination
        parameters.


        [https://www.discogs.com/developers/#page:database,header:database-all-label-releases](https://www.discogs.com/developers/#page:database,header:database-all-label-releases)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: page
          in: query
          schema:
            type: string
          example: '{page}'
        - name: per_page
          in: query
          schema:
            type: string
          example: '{per_page}'
        - name: label_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /database/search:
    get:
      tags:
        - Database
      summary: Search
      description: >-
        Issue a search query to our database. This endpoint accepts pagination
        parameters. Authentication (as any user) is required.


        [https://www.discogs.com/developers/#page:database,header:database-search](https://www.discogs.com/developers/#page:database,header:database-search)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: query
          in: query
          schema:
            type: string
          example: '{page}'
        - name: type
          in: query
          schema:
            type: string
          example: '{type}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/inventory:
    get:
      tags:
        - Marketplace
      summary: Inventory
      description: >-
        Returns the list of listings in a user's inventory. Accepts Pagination
        parameters.

        Basic information about each listing and the corresponding release is
        provided, suitable for display in a list. For detailed information about
        the release, make another API call to fetch the corresponding Release.


        If you are not authenticated as the inventory owner, only items that
        have a status of For Sale will be visible.

        If you are authenticated as the inventory owner you will get additional
        weight, format_quantity, external_id, and location keys.

        If the user is authorized, the listing will contain a in_cart boolean
        field indicating whether or not this listing is in their cart.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-inventory](https://www.discogs.com/developers/#page:marketplace,header:marketplace-inventory)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: string
          in: query
          schema:
            type: string
          example: '{status}'
        - name: sort
          in: query
          schema:
            type: string
          example: '{sort}'
        - name: sort_order
          in: query
          schema:
            type: string
          example: '{sort_order}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/listings/{listing_id}:
    get:
      tags:
        - Marketplace
      summary: Listing
      description: >-
        View the data associated with a listing.

        If the authorized user is the listing owner the listing will include the
        weight, format_quantity, external_id, and location keys. If the user is
        authorized, the listing will contain a in_cart boolean field indicating
        whether or not this listing is in their cart.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: curr_abbr
          in: query
          schema:
            type: string
          example: '{curr_abbr}'
        - name: listing_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Marketplace
      summary: Listing
      description: >-
        Edit the data associated with a listing.


        If the listing's status is not For Sale, Draft, or Expired, it cannot be
        modified – only deleted. To re-list a Sold listing, a new listing must
        be created.


        Authentication as the listing owner is required.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: query
          schema:
            type: string
          description: |
            The ID of the listing you are fetching
          example: '{release_id}'
        - name: condition
          in: query
          schema:
            type: string
          description: >-
            The condition of the release you are posting. Must be one of the
            following: 

            • Mint (M)

            • Near Mint (NM or M-)

            • Very Good Plus (VG+)

            • Very Good (VG)

            • Good Plus (G+)

            • Good (G)

            • Fair (F)

            • Poor (P)
          example: '{condition}'
        - name: sleeve_condition
          in: query
          schema:
            type: string
          description: >-
            The condition of the sleeve of the item you are posting. Must be one
            of the following: 

            • Mint (M)

            • Near Mint (NM or M-)

            • Very Good Plus (VG+)

            • Very Good (VG)

            • Good Plus (G+)

            • Good (G)

            • Fair (F)

            • Poor (P)

            • Generic Not Graded No Cover
          example: '{sleeve_condition}'
        - name: price
          in: query
          schema:
            type: string
          description: The price of the item (in the seller's currency).
          example: '{price}'
        - name: comments
          in: query
          schema:
            type: string
          description: Any remarks about the item that will be displayed to buyers.
          example: '{comments}'
        - name: allow_offers
          in: query
          schema:
            type: string
          description: >-
            Whether or not to allow buyers to make offers on the item. Defaults
            to false.
          example: '{allow_offers}'
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The status of the listing. Defaults to For Sale. Options are For
            Sale (the listing is ready to be shown on the Marketplace) and Draft
            (the listing is not ready for public display).
          example: '{status}'
        - name: external_id
          in: query
          schema:
            type: string
          description: >-
            A freeform field that can be used for the seller's own reference.
            Information stored here will not be displayed to anyone other than
            the seller. This field is called “Private Comments” on the Discogs
            website.
          example: '{external_id}'
        - name: location
          in: query
          schema:
            type: string
          description: >-
            A freeform field that is intended to help identify an item's
            physical storage location. Information stored here will not be
            displayed to anyone other than the seller. This field will be
            visible on the inventory management page and will be available in
            inventory exports via the website.
          example: '{location}'
        - name: weight
          in: query
          schema:
            type: string
          description: >-
            The weight, in grams, of this listing, for the purpose of
            calculating shipping. Set this field to auto to have the weight
            automatically estimated for you.
          example: '{weight}'
        - name: format_quantity
          in: query
          schema:
            type: string
          description: >-
            The number of items this listing counts as, for the purpose of
            calculating shipping. This field is called “Counts As” on the
            Discogs website. Set this field to auto to have the quantity
            automatically estimated for you.
          example: '{format_quantity}'
        - name: listing_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Marketplace
      summary: Listing
      description: >-
        Permanently remove a listing from the Marketplace. Authentication as the
        listing owner is required.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: curr_abbr
          in: query
          schema:
            type: string
          example: '{curr_abbr}'
        - name: listing_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/listings:
    post:
      tags:
        - Marketplace
      summary: New listing
      description: >-
        Create a Marketplace listing. Authentication is required; the listing
        will be added to the authenticated user's Inventory.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-new-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-new-listing)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: query
          schema:
            type: string
          description: |
            The ID of the listing you are fetching
          example: '{release_id}'
        - name: condition
          in: query
          schema:
            type: string
          description: >-
            The condition of the release you are posting. Must be one of the
            following: 

            • Mint (M)

            • Near Mint (NM or M-)

            • Very Good Plus (VG+)

            • Very Good (VG)

            • Good Plus (G+)

            • Good (G)

            • Fair (F)

            • Poor (P)
          example: '{condition}'
        - name: sleeve_condition
          in: query
          schema:
            type: string
          description: >-
            The condition of the sleeve of the item you are posting. Must be one
            of the following: 

            • Mint (M)

            • Near Mint (NM or M-)

            • Very Good Plus (VG+)

            • Very Good (VG)

            • Good Plus (G+)

            • Good (G)

            • Fair (F)

            • Poor (P)

            • Generic Not Graded No Cover
          example: '{sleeve_condition}'
        - name: price
          in: query
          schema:
            type: string
          description: The price of the item (in the seller's currency).
          example: '{price}'
        - name: comments
          in: query
          schema:
            type: string
          description: Any remarks about the item that will be displayed to buyers.
          example: '{comments}'
        - name: allow_offers
          in: query
          schema:
            type: string
          description: >-
            Whether or not to allow buyers to make offers on the item. Defaults
            to false.
          example: '{allow_offers}'
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The status of the listing. Defaults to For Sale. Options are For
            Sale (the listing is ready to be shown on the Marketplace) and Draft
            (the listing is not ready for public display).
          example: '{status}'
        - name: external_id
          in: query
          schema:
            type: string
          description: >-
            A freeform field that can be used for the seller's own reference.
            Information stored here will not be displayed to anyone other than
            the seller. This field is called “Private Comments” on the Discogs
            website.
          example: '{external_id}'
        - name: location
          in: query
          schema:
            type: string
          description: >-
            A freeform field that is intended to help identify an item's
            physical storage location. Information stored here will not be
            displayed to anyone other than the seller. This field will be
            visible on the inventory management page and will be available in
            inventory exports via the website.
          example: '{location}'
        - name: weight
          in: query
          schema:
            type: string
          description: >-
            The weight, in grams, of this listing, for the purpose of
            calculating shipping. Set this field to auto to have the weight
            automatically estimated for you.
          example: '{weight}'
        - name: format_quantity
          in: query
          schema:
            type: string
          description: >-
            The number of items this listing counts as, for the purpose of
            calculating shipping. This field is called “Counts As” on the
            Discogs website. Set this field to auto to have the quantity
            automatically estimated for you.
          example: '{format_quantity}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/orders/{order_id}:
    get:
      tags:
        - Marketplace
      summary: Order
      description: >-
        View the data associated with a listing.

        If the authorized user is the listing owner the listing will include the
        weight, format_quantity, external_id, and location keys. If the user is
        authorized, the listing will contain a in_cart boolean field indicating
        whether or not this listing is in their cart.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Marketplace
      summary: Order
      description: >-
        dit the data associated with an order.

        Authentication as the seller is required.

        The response contains a next_status key – an array of valid next
        statuses for this order, which you can display to the user in (for
        example) a dropdown control. This also renders your application more
        resilient to any future changes in the order status logic.

        Changing the order status using this resource will always message the
        buyer with:


        Seller changed status from Old Status to New Status


        and does not provide a facility for including a custom message along
        with the change. For more fine-grained control, use the Add a new
        message resource, which allows you to simultaneously add a message and
        change the order status.

        If the order status is neither cancelled, Payment Received, nor Shipped,
        you can change the shipping. Doing so will send an invoice to the buyer
        and set the order status to Invoice Sent. (For that reason, you cannot
        set the shipping and the order status in the same request.)


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing](https://www.discogs.com/developers/#page:marketplace,header:marketplace-listing)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: status
          in: query
          schema:
            type: string
          description: >-
            The status of the Order you are updating. Must be one of the
            following: 

            • New Order

            • Buyer Contacted

            • Invoice Sent

            • Payment Pending

            • Payment Received

            • Shipped

            • Refund Sent

            • Cancelled (Non-Paying Buyer)

            • Cancelled (Item Unavailable)

            • Cancelled (Per Buyer's Request)

            the order's current status


            Furthermore, the new status must be present in the order's
            next_status list. For more information about order statuses, see
            Edit an order.
          example: '{status}'
        - name: shipping
          in: query
          schema:
            type: string
          description: >-
            The order shipping amount. As a side-effect of setting this value,
            the buyer is invoiced and the order status is set to Invoice Sent.
          example: '{shipping}'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/orders:
    get:
      tags:
        - Marketplace
      summary: List orders
      description: >-
        Returns a list of the authenticated user's orders. Accepts Pagination
        parameters.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-orders](https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-orders)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: status
          in: query
          schema:
            type: string
          description: |+
            Only show orders with this status. Valid status keys are: 
            • All
            • New Order
            • Buyer Contacted
            • Invoice Sent
            • Payment Pending
            • Payment Received
            • Shipped
            • Merged
            • Order Changed
            • Refund Sent
            • Cancelled
            • Cancelled (Non-Paying Buyer)
            • Cancelled (Item Unavailable)
            • Cancelled (Per Buyer's Request) Cancelled (Refund Received)

          example: '{status}'
        - name: sort
          in: query
          schema:
            type: string
          description: |-
            Sort items by this field (see below). Valid sort keys are: 
            • id
            • buyer
            • created
            • status
            • last_activity
          example: '{sort}'
        - name: sort_order
          in: query
          schema:
            type: string
          description: Sort items in a particular order (one of asc, desc)
          example: '{sort_order}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/orders/{order_id}/messages:
    get:
      tags:
        - Marketplace
      summary: List order messages
      description: >-
        Returns a list of the order's messages with the most recent first.
        Accepts Pagination parameters.

        Authentication as the seller is required.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-order-messages](https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-order-messages)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Marketplace
      summary: List order messages
      description: >-
        Adds a new message to the order's message log.

        When posting a new message, you can simultaneously change the order
        status. If you do, the message will automatically be prepended with:


        Seller changed status from Old Status to New Status

        While message and status are each optional, one or both must be present.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-order-messages](https://www.discogs.com/developers/#page:marketplace,header:marketplace-list-order-messages)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: message
          in: query
          schema:
            type: string
          example: '{message}'
        - name: status
          in: query
          schema:
            type: string
          example: '{status}'
        - name: order_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/fee/{price}:
    get:
      tags:
        - Marketplace
      summary: Fee
      description: >-
        The Fee resource allows you to quickly calculate the fee for selling an
        item on the Marketplace.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-fee](https://www.discogs.com/developers/#page:marketplace,header:marketplace-fee

        )
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: price
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/fee/{price}/{currency}:
    get:
      tags:
        - Marketplace
      summary: Fee with currency
      description: >-
        The Fee resource allows you to quickly calculate the fee for selling an
        item on the Marketplace given a particular currency.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-fee-with-currency](https://www.discogs.com/developers/#page:marketplace,header:marketplace-fee-with-currency)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: price
          in: path
          schema:
            type: string
          required: true
        - name: currency
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /marketplace/price_suggestions/{release_id}:
    get:
      tags:
        - Marketplace
      summary: Price suggestions
      description: >-
        Retrieve price suggestions for the provided Release ID. If no
        suggestions are available, an empty object will be returned.

        Authentication is required, and the user needs to have filled out their
        seller settings. Suggested prices will be denominated in the user's
        selling currency.


        [https://www.discogs.com/developers/#page:marketplace,header:marketplace-price-suggestions](https://www.discogs.com/developers/#page:marketplace,header:marketplace-price-suggestions)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/export:
    post:
      tags:
        - Inventory Export
      summary: Export your inventory
      description: >-
        Request an export of your inventory as a CSV.


        [https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-export-your-inventory](https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-export-your-inventory)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Inventory Export
      summary: Recent exports
      description: >-
        Get a list of all recent exports of your inventory. Accepts Pagination
        parameters.


        [https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-get-recent-exports](https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-get-recent-exports)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/export/{id}:
    get:
      tags:
        - Inventory Export
      summary: Get an export
      description: >-
        Get details about the status of an inventory export.


        [https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-get-an-export](https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-get-an-export)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/export/{id}/download:
    get:
      tags:
        - Inventory Export
      summary: Download an export
      description: >-
        Download the results of an inventory export.


        [https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-download-an-export](https://www.discogs.com/developers/#page:inventory-export,header:inventory-export-download-an-export)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/upload/add:
    post:
      tags:
        - Inventory Upload
      summary: Add inventory
      description: >-
        Upload a CSV of listings to add to your inventory.


        [https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-add-inventory](https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-add-inventory)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/upload/change:
    post:
      tags:
        - Inventory Upload
      summary: Delete inventory
      description: >-
        Upload a CSV of listings to delete from your inventory.


        [https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-delete-inventory](https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-delete-inventory)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/upload:
    get:
      tags:
        - Inventory Upload
      summary: Recent uploads
      description: >-
        Get a list of all recent inventory uploads. Accepts Pagination
        parameters.


        [https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-get-recent-uploads](https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-get-recent-uploads)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /inventory/upload/{id}:
    get:
      tags:
        - Inventory Upload
      summary: Recent upload by ID
      description: >-
        Get details about the status of an inventory upload.


        [https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-get-an-upload](https://www.discogs.com/developers/#page:inventory-upload,header:inventory-upload-get-an-upload)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /oauth/identity:
    get:
      tags:
        - User identity
      summary: Identity
      description: >-
        Retrieve basic information about the authenticated user.

        You can use this resource to find out who you're authenticated as, and
        it also doubles as a good sanity check to ensure that you're using OAuth
        correctly.

        For more detailed information, make another request for the user's
        Profile.


        [https://www.discogs.com/developers/#page:user-identity,header:user-identity-identity](https://www.discogs.com/developers/#page:user-identity,header:user-identity-identity)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}:
    get:
      tags:
        - User identity
      summary: Profile
      description: >-
        Retrieve a user by username.


        If authenticated as the requested user, the email key will be visible,
        and the num_list count will include the user's private lists.


        If authenticated as the requested user or the user's collection/wantlist
        is public, the num_collection / num_wantlist keys will be visible.


        [https://www.discogs.com/developers/#page:user-identity,header:user-identity-profile](https://www.discogs.com/developers/#page:user-identity,header:user-identity-profile)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User identity
      summary: Profile
      description: >-
        Edit a user's profile data. Authentication as the user is required.
        Parameters must be filled in a json object inside the body. 


        [https://www.discogs.com/developers/#page:user-identity,header:user-identity-profile](https://www.discogs.com/developers/#page:user-identity,header:user-identity-profile)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/submissions:
    get:
      tags:
        - User identity
      summary: User submissions
      description: >-
        Retrieve a user's submissions by username. Accepts Pagination
        parameters.


        [https://www.discogs.com/developers/#page:user-identity,header:user-identity-user-submissions](https://www.discogs.com/developers/#page:user-identity,header:user-identity-user-submissions)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/contributions:
    get:
      tags:
        - User identity
      summary: User contributions
      description: >-
        Retrieve a user's contributions by username. Accepts Pagination
        parameters. The Contributions resource represents releases, labels, and
        artists submitted by a user. 


        [https://www.discogs.com/developers/#page:user-identity,header:user-identity-user-contributions](https://www.discogs.com/developers/#page:user-identity,header:user-identity-user-contributions)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders:
    get:
      tags:
        - User Collection
      summary: Collection
      description: >-
        Retrieve a list of folders in a user's collection. If the collection has
        been made private by its owner, authentication as the collection owner
        is required. If you are not authenticated as the collection owner, only
        folder ID 0 (the “All” folder) will be visible (if the requested user's
        collection is public).


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User Collection
      summary: Collection
      description: >-
        Retrieve a list of folders in a user's collection. If the collection has
        been made private by its owner, authentication as the collection owner
        is required. If you are not authenticated as the collection owner, only
        folder ID 0 (the “All” folder) will be visible (if the requested user's
        collection is public).


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders/{folder_id}:
    get:
      tags:
        - User Collection
      summary: List custom fields
      description: >-
        Retrieve a list of user-defined collection notes fields. These fields
        are available on every release in the collection.


        If the collection has been made private by its owner, authentication as
        the collection owner is required.


        If you are not authenticated as the collection owner, only fields with
        public set to true will be visible.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-list-custom-fields](https://www.discogs.com/developers/#page:user-collection,header:user-collection-list-custom-fields)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User Collection
      summary: Collection folder
      description: >-
        Edit a folder's metadata. Folders 0 and 1 cannot be renamed.
        Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-folder](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-folder)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Collection
      summary: Collection folder
      description: >-
        Delete a folder from a user's collection. A folder must be empty before
        it can be deleted. Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-folder](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-folder)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/releases/{release_id}:
    get:
      tags:
        - User Collection
      summary: Collection items by release
      description: >-
        View the user's collection folders which contain a specified release.
        This will also show information about each release instance. The
        release_id must be non-zero.


        Authentication as the collection owner is required if the owner's
        collection is private.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-items-by-release](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-items-by-release)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders/{folder_id}/releases:
    get:
      tags:
        - User Collection
      summary: Collection items by folder
      description: >-
        Returns the list of item in a folder in a user's collection. Accepts
        Pagination parameters.


        Basic information about each release is provided, suitable for display
        in a list. For detailed information, make another API call to fetch the
        corresponding release.


        If folder_id is not 0, or the collection has been made private by its
        owner, authentication as the collection owner is required.


        If you are not authenticated as the collection owner, only public notes
        fields will be visible.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-items-by-folder](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-items-by-folder)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: sort
          in: query
          schema:
            type: string
          description: "Sort items by one of these fields: \n• label\n• artist\n• title\n• catno\n• format\n•\_rating\n• added\n• year"
          example: '{sort}'
        - name: sort_order
          in: query
          schema:
            type: string
          description: Sort items in a particular order (asc or desc)
          example: '{sort_order}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders/{folder_id}/releases/{release_id}:
    post:
      tags:
        - User Collection
      summary: Add to collection folder
      description: >-
        Add a release to a folder in a user's collection.


        The folder_id must be non-zero – you can use 1 for “Uncategorized”.


        Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-add-to-collection-folder](https://www.discogs.com/developers/#page:user-collection,header:user-collection-add-to-collection-folder)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders/{folder_id}/releases/{release_id}/instances/{instance_id}:
    post:
      tags:
        - User Collection
      summary: Change rating of release
      description: >-
        Change the rating on a release and/or move the instance to another
        folder.


        This endpoint potentially takes 2 folder_id parameters: one in the URL
        (which is the folder you are requesting, and is required), and one in
        the request body (representing the folder you want to move the instance
        to, which is optional)


        Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-change-rating-of-release](https://www.discogs.com/developers/#page:user-collection,header:user-collection-change-rating-of-release)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: instance_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Collection
      summary: Delete instance from folder
      description: >-
        Remove an instance of a release from a user's collection folder.


        To move the release to the “Uncategorized” folder instead, use the POST
        method.


        Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-delete-instance-from-folder](https://www.discogs.com/developers/#page:user-collection,header:user-collection-delete-instance-from-folder)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: instance_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/folders/{folder_id}/releases/{release_id}/instances/{instance_id}/fields/{field_id}{:
    post:
      tags:
        - User Collection
      summary: Edit fields instance
      description: >-
        Change the value of a notes field on a particular instance.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-edit-fields-instance](https://www.discogs.com/developers/#page:user-collection,header:user-collection-edit-fields-instance)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: value
          in: query
          schema:
            type: string
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
        - name: instance_id
          in: path
          schema:
            type: string
          required: true
        - name: field_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/collection/value:
    get:
      tags:
        - User Collection
      summary: Collection value
      description: >-
        Returns the minimum, median, and maximum value of a user's collection.


        Authentication as the collection owner is required.


        [https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-value](https://www.discogs.com/developers/#page:user-collection,header:user-collection-collection-value)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/wants:
    get:
      tags:
        - User Wantlist
      summary: Wantlist
      description: >-
        Returns the list of releases in a user's wantlist. Accepts Pagination
        parameters.


        Basic information about each release is provided, suitable for display
        in a list. For detailed information, make another API call to fetch the
        corresponding release.


        If the wantlist has been made private by its owner, you must be
        authenticated as the owner to view it.


        The notes field will be visible if you are authenticated as the wantlist
        owner.


        [https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-wantlist](https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-wantlist)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/wants/{release_id}:
    post:
      tags:
        - User Wantlist
      summary: Add to wantlist
      description: >-
        Add a release to a user's wantlist. Additional parameters must be send
        as JSON object inside the request body.


        Authentication as the wantlist owner is required.


        [https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-add-to-wantlist](https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-add-to-wantlist)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Wantlist
      summary: Delete release from wantlist
      description: >-
        Delete a release from a user's wantlist.


        Authentication as the wantlist owner is required.


        [https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-add-to-wantlist](https://www.discogs.com/developers/#page:user-wantlist,header:user-wantlist-add-to-wantlist)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
        - name: release_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{username}/lists:
    get:
      tags:
        - User Lists
      summary: User Lists
      description: >-
        Returns a User's Lists. Private Lists will only display when
        authenticated as the owner. Accepts Pagination parameters.


        [https://www.discogs.com/developers/#page:user-lists,header:user-lists-user-lists](https://www.discogs.com/developers/#page:user-lists,header:user-lists-user-lists)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: username
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /lists/{list_id}:
    get:
      tags:
        - User Lists
      summary: List
      description: >-
        Returns items from a specified List. Private Lists will only display
        when authenticated as the owner.


        [https://www.discogs.com/developers/#page:user-lists,header:user-lists-list](https://www.discogs.com/developers/#page:user-lists,header:user-lists-list)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{user_agent}}'
        - name: list_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
